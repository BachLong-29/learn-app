import { errorModal, successModal } from 'components/Modal/SuccessModal';

import { $FixType } from 'utils/constants';
import { Flex } from 'ui-components/General/Flex';
import Head from 'next/head';
import NegativeButton from 'ui-components/Button/NegativeButton';
import PositiveButton from 'ui-components/Button/PositiveButton';
import StudentForm from '../components/StudentForm';
import { addStudentRedux } from 'redux/actions/student.action';
import defaultTheme from 'ui-components/theme/theme';
import studentApi from 'pages/api/studentService';
import styled from 'styled-components';
import { useCallback } from 'react';
import { useDispatch } from 'react-redux';
import { useRouter } from 'next/router';
import { v4 as uuid } from 'uuid';

export default function User() {
  const dispatch = useDispatch();
  const router = useRouter();
  const handleSubmit = (data: $FixType) => {
    const id = uuid();
    const createData = {
      id: id,
      name: data.name,
      age: data.age,
      gender: data.gender,
      nickname: data.nickname,
      rank: data.rank,
      images: data.images,
    };
    studentApi
      .createStudent(createData)
      .then(() => {
        dispatch(addStudentRedux(createData));
        successModal({
          onOk: () => {
            router.push('/student');
          },
        });
      })
      .catch((error) => {
        errorModal({});
      });
  };
  const renderAction = useCallback((form: any) => {
    return (
      <FormFooter>
        <NegativeButton
          onClick={() => {
            router.push('/student');
          }}
        >
          Cancel
        </NegativeButton>
        <PositiveButton onClick={() => handleSubmit(form.values)}>
          Save
        </PositiveButton>
      </FormFooter>
    );
  }, []);

  return (
    <div>
      <Head>
        <title>Create New Student</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <StudentForm renderAction={renderAction} />
    </div>
  );
}

const FormFooter = styled(Flex)`
  background: ${defaultTheme.colors.white};
  border-end-end-radius: 4px;
  justify-content: center;
  align-items: center;
  height: 100px;
  gap: 40px;
`;
